/* automatically generated by rust-bindgen */

pub const FRIBIDI: &'static [u8; 8usize] = b"fribidi\0";
pub const FRIBIDI_NAME: &'static [u8; 12usize] = b"GNU FriBidi\0";
pub const FRIBIDI_BUGREPORT: &'static [u8; 46usize] =
    b"https://github.com/fribidi/fribidi/issues/new\0";
pub const FRIBIDI_VERSION: &'static [u8; 7usize] = b"1.0.12\0";
pub const FRIBIDI_MAJOR_VERSION: u32 = 1;
pub const FRIBIDI_MINOR_VERSION: u32 = 0;
pub const FRIBIDI_MICRO_VERSION: u32 = 12;
pub const FRIBIDI_INTERFACE_VERSION: u32 = 4;
pub const FRIBIDI_INTERFACE_VERSION_STRING: &'static [u8; 2usize] = b"4\0";
pub const FRIBIDI_SIZEOF_INT: u32 = 4;
pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 35;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const FRIBIDI_NO_BRACKET: u32 = 0;
pub const FRIBIDI_UNICODE_VERSION: &'static [u8; 7usize] = b"14.0.0\0";
pub const FRIBIDI_UNICODE_MAJOR_VERSION: u32 = 14;
pub const FRIBIDI_UNICODE_MINOR_VERSION: u32 = 0;
pub const FRIBIDI_UNICODE_MICRO_VERSION: u32 = 0;
pub const FRIBIDI_BIDI_NUM_TYPES: u32 = 19;
pub const FRIBIDI_BIDI_MAX_EXPLICIT_LEVEL: u32 = 125;
pub const FRIBIDI_BIDI_MAX_RESOLVED_LEVELS: u32 = 127;
pub const FRIBIDI_BIDI_MAX_NESTED_BRACKET_PAIRS: u32 = 63;
pub const FRIBIDI_CHAR_LRM: u32 = 8206;
pub const FRIBIDI_CHAR_RLM: u32 = 8207;
pub const FRIBIDI_CHAR_LRE: u32 = 8234;
pub const FRIBIDI_CHAR_RLE: u32 = 8235;
pub const FRIBIDI_CHAR_PDF: u32 = 8236;
pub const FRIBIDI_CHAR_LRO: u32 = 8237;
pub const FRIBIDI_CHAR_RLO: u32 = 8238;
pub const FRIBIDI_CHAR_LRI: u32 = 8294;
pub const FRIBIDI_CHAR_RLI: u32 = 8295;
pub const FRIBIDI_CHAR_FSI: u32 = 8296;
pub const FRIBIDI_CHAR_PDI: u32 = 8297;
pub const FRIBIDI_CHAR_LS: u32 = 8232;
pub const FRIBIDI_CHAR_PS: u32 = 8233;
pub const FRIBIDI_CHAR_ZWNJ: u32 = 8204;
pub const FRIBIDI_CHAR_ZWJ: u32 = 8205;
pub const FRIBIDI_CHAR_HEBREW_ALEF: u32 = 1488;
pub const FRIBIDI_CHAR_ARABIC_ALEF: u32 = 1575;
pub const FRIBIDI_CHAR_ARABIC_ZERO: u32 = 1632;
pub const FRIBIDI_CHAR_PERSIAN_ZERO: u32 = 1776;
pub const FRIBIDI_CHAR_ZWNBSP: u32 = 65279;
pub const FRIBIDI_CHAR_FILL: u32 = 65279;
pub const FRIBIDI_FLAG_SHAPE_MIRRORING: u32 = 1;
pub const FRIBIDI_FLAG_REORDER_NSM: u32 = 2;
pub const FRIBIDI_FLAG_SHAPE_ARAB_PRES: u32 = 256;
pub const FRIBIDI_FLAG_SHAPE_ARAB_LIGA: u32 = 512;
pub const FRIBIDI_FLAG_SHAPE_ARAB_CONSOLE: u32 = 1024;
pub const FRIBIDI_FLAG_REMOVE_BIDI: u32 = 65536;
pub const FRIBIDI_FLAG_REMOVE_JOINING: u32 = 131072;
pub const FRIBIDI_FLAG_REMOVE_SPECIALS: u32 = 262144;
pub const FRIBIDI_FLAGS_DEFAULT: u32 = 262147;
pub const FRIBIDI_FLAGS_ARABIC: u32 = 768;
pub const FRIBIDI_MASK_RTL: u32 = 1;
pub const FRIBIDI_MASK_ARABIC: u32 = 2;
pub const FRIBIDI_MASK_STRONG: u32 = 16;
pub const FRIBIDI_MASK_WEAK: u32 = 32;
pub const FRIBIDI_MASK_NEUTRAL: u32 = 64;
pub const FRIBIDI_MASK_SENTINEL: u32 = 128;
pub const FRIBIDI_MASK_LETTER: u32 = 256;
pub const FRIBIDI_MASK_NUMBER: u32 = 512;
pub const FRIBIDI_MASK_NUMSEPTER: u32 = 1024;
pub const FRIBIDI_MASK_SPACE: u32 = 2048;
pub const FRIBIDI_MASK_EXPLICIT: u32 = 4096;
pub const FRIBIDI_MASK_ISOLATE: u32 = 32768;
pub const FRIBIDI_MASK_SEPARATOR: u32 = 8192;
pub const FRIBIDI_MASK_OVERRIDE: u32 = 16384;
pub const FRIBIDI_MASK_FIRST: u32 = 33554432;
pub const FRIBIDI_MASK_ES: u32 = 65536;
pub const FRIBIDI_MASK_ET: u32 = 131072;
pub const FRIBIDI_MASK_CS: u32 = 262144;
pub const FRIBIDI_MASK_NSM: u32 = 524288;
pub const FRIBIDI_MASK_BN: u32 = 1048576;
pub const FRIBIDI_MASK_BS: u32 = 2097152;
pub const FRIBIDI_MASK_SS: u32 = 4194304;
pub const FRIBIDI_MASK_WS: u32 = 8388608;
pub const FRIBIDI_MASK_PRIVATE: u32 = 16777216;
pub const FRIBIDI_TYPE_LTR_VAL: u32 = 272;
pub const FRIBIDI_TYPE_RTL_VAL: u32 = 273;
pub const FRIBIDI_TYPE_AL_VAL: u32 = 275;
pub const FRIBIDI_TYPE_LRE_VAL: u32 = 4112;
pub const FRIBIDI_TYPE_RLE_VAL: u32 = 4113;
pub const FRIBIDI_TYPE_LRO_VAL: u32 = 20496;
pub const FRIBIDI_TYPE_RLO_VAL: u32 = 20497;
pub const FRIBIDI_TYPE_PDF_VAL: u32 = 4128;
pub const FRIBIDI_TYPE_EN_VAL: u32 = 544;
pub const FRIBIDI_TYPE_AN_VAL: u32 = 546;
pub const FRIBIDI_TYPE_ES_VAL: u32 = 66592;
pub const FRIBIDI_TYPE_ET_VAL: u32 = 132128;
pub const FRIBIDI_TYPE_CS_VAL: u32 = 263200;
pub const FRIBIDI_TYPE_NSM_VAL: u32 = 524320;
pub const FRIBIDI_TYPE_BN_VAL: u32 = 1050656;
pub const FRIBIDI_TYPE_BS_VAL: u32 = 2107456;
pub const FRIBIDI_TYPE_SS_VAL: u32 = 4204608;
pub const FRIBIDI_TYPE_WS_VAL: u32 = 8390720;
pub const FRIBIDI_TYPE_ON_VAL: u32 = 64;
pub const FRIBIDI_TYPE_WLTR_VAL: u32 = 32;
pub const FRIBIDI_TYPE_WRTL_VAL: u32 = 33;
pub const FRIBIDI_TYPE_SENTINEL: u32 = 128;
pub const FRIBIDI_TYPE_PRIVATE: u32 = 16777216;
pub const FRIBIDI_TYPE_LRI_VAL: u32 = 32832;
pub const FRIBIDI_TYPE_RLI_VAL: u32 = 32833;
pub const FRIBIDI_TYPE_FSI_VAL: u32 = 33587264;
pub const FRIBIDI_TYPE_PDI_VAL: u32 = 32864;
pub const FRIBIDI_MASK_JOINS_RIGHT: u32 = 1;
pub const FRIBIDI_MASK_JOINS_LEFT: u32 = 2;
pub const FRIBIDI_MASK_ARAB_SHAPES: u32 = 4;
pub const FRIBIDI_MASK_TRANSPARENT: u32 = 8;
pub const FRIBIDI_MASK_IGNORED: u32 = 16;
pub const FRIBIDI_MASK_LIGATURED: u32 = 32;
pub const FRIBIDI_JOINING_TYPE_U_VAL: u32 = 0;
pub const FRIBIDI_JOINING_TYPE_R_VAL: u32 = 5;
pub const FRIBIDI_JOINING_TYPE_D_VAL: u32 = 7;
pub const FRIBIDI_JOINING_TYPE_C_VAL: u32 = 3;
pub const FRIBIDI_JOINING_TYPE_L_VAL: u32 = 6;
pub const FRIBIDI_JOINING_TYPE_T_VAL: u32 = 12;
pub const FRIBIDI_JOINING_TYPE_G_VAL: u32 = 16;
pub const FRIBIDI_BRACKET_OPEN_MASK: u32 = 2147483648;
pub const FRIBIDI_BRACKET_ID_MASK: u32 = 2147483647;
pub const UNI_MAX_BIDI_LEVEL: u32 = 125;
pub const UNI_LRM: u32 = 8206;
pub const UNI_RLM: u32 = 8207;
pub const UNI_LRE: u32 = 8234;
pub const UNI_RLE: u32 = 8235;
pub const UNI_LRO: u32 = 8237;
pub const UNI_RLO: u32 = 8238;
pub const UNI_LS: u32 = 8232;
pub const UNI_PS: u32 = 8233;
pub const UNI_ZWNJ: u32 = 8204;
pub const UNI_ZWJ: u32 = 8205;
pub const UNI_HEBREW_ALEF: u32 = 1488;
pub const UNI_ARABIC_ALEF: u32 = 1575;
pub const UNI_ARABIC_ZERO: u32 = 1632;
pub const UNI_FARSI_ZERO: u32 = 1776;
extern "C" {
    pub fn fribidi_debug_status() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn fribidi_set_debug(state: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[test]
fn bindgen_test_layout___fsid_t() {
    assert_eq!(
        ::std::mem::size_of::<__fsid_t>(),
        8usize,
        concat!("Size of: ", stringify!(__fsid_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__fsid_t>(),
        4usize,
        concat!("Alignment of ", stringify!(__fsid_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__fsid_t>())).__val as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__fsid_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub type fribidi_boolean = ::std::os::raw::c_int;
pub type FriBidiChar = u32;
pub type FriBidiStrIndex = ::std::os::raw::c_int;
pub type FriBidiBracketType = FriBidiChar;
extern "C" {
    pub static mut fribidi_unicode_version: *const ::std::os::raw::c_char;
}
pub type FriBidiFlags = u32;
pub type FriBidiLevel = ::std::os::raw::c_schar;
pub const FriBidiCharType_FRIBIDI_TYPE_LTR: FriBidiCharType = 272;
pub const FriBidiCharType_FRIBIDI_TYPE_RTL: FriBidiCharType = 273;
pub const FriBidiCharType_FRIBIDI_TYPE_AL: FriBidiCharType = 275;
pub const FriBidiCharType_FRIBIDI_TYPE_EN: FriBidiCharType = 544;
pub const FriBidiCharType_FRIBIDI_TYPE_AN: FriBidiCharType = 546;
pub const FriBidiCharType_FRIBIDI_TYPE_ES: FriBidiCharType = 66592;
pub const FriBidiCharType_FRIBIDI_TYPE_ET: FriBidiCharType = 132128;
pub const FriBidiCharType_FRIBIDI_TYPE_CS: FriBidiCharType = 263200;
pub const FriBidiCharType_FRIBIDI_TYPE_NSM: FriBidiCharType = 524320;
pub const FriBidiCharType_FRIBIDI_TYPE_BN: FriBidiCharType = 1050656;
pub const FriBidiCharType_FRIBIDI_TYPE_BS: FriBidiCharType = 2107456;
pub const FriBidiCharType_FRIBIDI_TYPE_SS: FriBidiCharType = 4204608;
pub const FriBidiCharType_FRIBIDI_TYPE_WS: FriBidiCharType = 8390720;
pub const FriBidiCharType_FRIBIDI_TYPE_ON: FriBidiCharType = 64;
pub const FriBidiCharType_FRIBIDI_TYPE_LRE: FriBidiCharType = 4112;
pub const FriBidiCharType_FRIBIDI_TYPE_RLE: FriBidiCharType = 4113;
pub const FriBidiCharType_FRIBIDI_TYPE_LRO: FriBidiCharType = 20496;
pub const FriBidiCharType_FRIBIDI_TYPE_RLO: FriBidiCharType = 20497;
pub const FriBidiCharType_FRIBIDI_TYPE_PDF: FriBidiCharType = 4128;
pub const FriBidiCharType_FRIBIDI_TYPE_LRI: FriBidiCharType = 32832;
pub const FriBidiCharType_FRIBIDI_TYPE_RLI: FriBidiCharType = 32833;
pub const FriBidiCharType_FRIBIDI_TYPE_FSI: FriBidiCharType = 33587264;
pub const FriBidiCharType_FRIBIDI_TYPE_PDI: FriBidiCharType = 32864;
pub const FriBidiCharType__FRIBIDI_TYPE_SENTINEL: FriBidiCharType = 128;
pub type FriBidiCharType = u32;
pub const FriBidiParType_FRIBIDI_PAR_LTR: FriBidiParType = 272;
pub const FriBidiParType_FRIBIDI_PAR_RTL: FriBidiParType = 273;
pub const FriBidiParType_FRIBIDI_PAR_ON: FriBidiParType = 64;
pub const FriBidiParType_FRIBIDI_PAR_WLTR: FriBidiParType = 32;
pub const FriBidiParType_FRIBIDI_PAR_WRTL: FriBidiParType = 33;
pub const FriBidiParType__FRIBIDI_PAR_SENTINEL: FriBidiParType = 128;
pub type FriBidiParType = u32;
extern "C" {
    pub fn fribidi_get_bidi_type(ch: FriBidiChar) -> FriBidiCharType;
}
extern "C" {
    pub fn fribidi_get_bidi_types(
        str: *const FriBidiChar,
        len: FriBidiStrIndex,
        btypes: *mut FriBidiCharType,
    );
}
extern "C" {
    pub fn fribidi_get_bidi_type_name(t: FriBidiCharType) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn fribidi_get_par_direction(
        bidi_types: *const FriBidiCharType,
        len: FriBidiStrIndex,
    ) -> FriBidiParType;
}
extern "C" {
    pub fn fribidi_get_par_embedding_levels_ex(
        bidi_types: *const FriBidiCharType,
        bracket_types: *const FriBidiBracketType,
        len: FriBidiStrIndex,
        pbase_dir: *mut FriBidiParType,
        embedding_levels: *mut FriBidiLevel,
    ) -> FriBidiLevel;
}
extern "C" {
    pub fn fribidi_reorder_line(
        flags: FriBidiFlags,
        bidi_types: *const FriBidiCharType,
        len: FriBidiStrIndex,
        off: FriBidiStrIndex,
        base_dir: FriBidiParType,
        embedding_levels: *mut FriBidiLevel,
        visual_str: *mut FriBidiChar,
        map: *mut FriBidiStrIndex,
    ) -> FriBidiLevel;
}
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_U: _FriBidiJoiningTypeEnum = 0;
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_R: _FriBidiJoiningTypeEnum = 5;
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_D: _FriBidiJoiningTypeEnum = 7;
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_C: _FriBidiJoiningTypeEnum = 3;
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_T: _FriBidiJoiningTypeEnum = 12;
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_L: _FriBidiJoiningTypeEnum = 6;
pub const _FriBidiJoiningTypeEnum_FRIBIDI_JOINING_TYPE_G: _FriBidiJoiningTypeEnum = 16;
pub const _FriBidiJoiningTypeEnum__FRIBIDI_JOINING_TYPE_JUNK: _FriBidiJoiningTypeEnum = 17;
pub type _FriBidiJoiningTypeEnum = u32;
pub type FriBidiJoiningType = u8;
pub type FriBidiArabicProp = u8;
extern "C" {
    pub fn fribidi_get_joining_type(ch: FriBidiChar) -> FriBidiJoiningType;
}
extern "C" {
    pub fn fribidi_get_joining_types(
        str: *const FriBidiChar,
        len: FriBidiStrIndex,
        jtypes: *mut FriBidiJoiningType,
    );
}
extern "C" {
    pub fn fribidi_get_joining_type_name(j: FriBidiJoiningType) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn fribidi_join_arabic(
        bidi_types: *const FriBidiCharType,
        len: FriBidiStrIndex,
        embedding_levels: *const FriBidiLevel,
        ar_props: *mut FriBidiArabicProp,
    );
}
extern "C" {
    pub fn fribidi_get_mirror_char(
        ch: FriBidiChar,
        mirrored_ch: *mut FriBidiChar,
    ) -> fribidi_boolean;
}
extern "C" {
    pub fn fribidi_shape_mirroring(
        embedding_levels: *const FriBidiLevel,
        len: FriBidiStrIndex,
        str: *mut FriBidiChar,
    );
}
extern "C" {
    pub fn fribidi_get_bracket(ch: FriBidiChar) -> FriBidiBracketType;
}
extern "C" {
    pub fn fribidi_get_bracket_types(
        str: *const FriBidiChar,
        len: FriBidiStrIndex,
        types: *const FriBidiCharType,
        btypes: *mut FriBidiBracketType,
    );
}
extern "C" {
    pub fn fribidi_shape_arabic(
        flags: FriBidiFlags,
        embedding_levels: *const FriBidiLevel,
        len: FriBidiStrIndex,
        ar_props: *mut FriBidiArabicProp,
        str: *mut FriBidiChar,
    );
}
extern "C" {
    pub fn fribidi_shape(
        flags: FriBidiFlags,
        embedding_levels: *const FriBidiLevel,
        len: FriBidiStrIndex,
        ar_props: *mut FriBidiArabicProp,
        str: *mut FriBidiChar,
    );
}
pub const FriBidiCharSet__FRIBIDI_CHAR_SET_NOT_FOUND: FriBidiCharSet = 0;
pub const FriBidiCharSet_FRIBIDI_CHAR_SET_UTF8: FriBidiCharSet = 1;
pub const FriBidiCharSet_FRIBIDI_CHAR_SET_CAP_RTL: FriBidiCharSet = 2;
pub const FriBidiCharSet_FRIBIDI_CHAR_SET_ISO8859_6: FriBidiCharSet = 3;
pub const FriBidiCharSet_FRIBIDI_CHAR_SET_ISO8859_8: FriBidiCharSet = 4;
pub const FriBidiCharSet_FRIBIDI_CHAR_SET_CP1255: FriBidiCharSet = 5;
pub const FriBidiCharSet_FRIBIDI_CHAR_SET_CP1256: FriBidiCharSet = 6;
pub const FriBidiCharSet__FRIBIDI_CHAR_SETS_NUM_PLUS_ONE: FriBidiCharSet = 7;
pub type FriBidiCharSet = u32;
extern "C" {
    pub fn fribidi_charset_to_unicode(
        char_set: FriBidiCharSet,
        s: *const ::std::os::raw::c_char,
        len: FriBidiStrIndex,
        us: *mut FriBidiChar,
    ) -> FriBidiStrIndex;
}
extern "C" {
    pub fn fribidi_unicode_to_charset(
        char_set: FriBidiCharSet,
        us: *const FriBidiChar,
        len: FriBidiStrIndex,
        s: *mut ::std::os::raw::c_char,
    ) -> FriBidiStrIndex;
}
extern "C" {
    pub fn fribidi_parse_charset(s: *const ::std::os::raw::c_char) -> FriBidiCharSet;
}
extern "C" {
    pub fn fribidi_char_set_name(char_set: FriBidiCharSet) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn fribidi_char_set_title(char_set: FriBidiCharSet) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn fribidi_char_set_desc(char_set: FriBidiCharSet) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn fribidi_remove_bidi_marks(
        str: *mut FriBidiChar,
        len: FriBidiStrIndex,
        positions_to_this: *mut FriBidiStrIndex,
        position_from_this_list: *mut FriBidiStrIndex,
        embedding_levels: *mut FriBidiLevel,
    ) -> FriBidiStrIndex;
}
extern "C" {
    pub fn fribidi_log2vis(
        str: *const FriBidiChar,
        len: FriBidiStrIndex,
        pbase_dir: *mut FriBidiParType,
        visual_str: *mut FriBidiChar,
        positions_L_to_V: *mut FriBidiStrIndex,
        positions_V_to_L: *mut FriBidiStrIndex,
        embedding_levels: *mut FriBidiLevel,
    ) -> FriBidiLevel;
}
extern "C" {
    pub fn fribidi_mirroring_status() -> fribidi_boolean;
}
extern "C" {
    pub fn fribidi_set_mirroring(state: fribidi_boolean) -> fribidi_boolean;
}
extern "C" {
    pub fn fribidi_reorder_nsm_status() -> fribidi_boolean;
}
extern "C" {
    pub fn fribidi_set_reorder_nsm(state: fribidi_boolean) -> fribidi_boolean;
}
extern "C" {
    pub fn fribidi_log2vis_get_embedding_levels(
        bidi_types: *const FriBidiCharType,
        len: FriBidiStrIndex,
        pbase_dir: *mut FriBidiParType,
        embedding_levels: *mut FriBidiLevel,
    ) -> FriBidiLevel;
}
extern "C" {
    pub fn fribidi_get_type(ch: FriBidiChar) -> FriBidiCharType;
}
extern "C" {
    pub fn fribidi_get_type_internal(ch: FriBidiChar) -> FriBidiCharType;
}
extern "C" {
    pub fn fribidi_get_par_embedding_levels(
        bidi_types: *const FriBidiCharType,
        len: FriBidiStrIndex,
        pbase_dir: *mut FriBidiParType,
        embedding_levels: *mut FriBidiLevel,
    ) -> FriBidiLevel;
}
extern "C" {
    pub static mut fribidi_version_info: *const ::std::os::raw::c_char;
}
